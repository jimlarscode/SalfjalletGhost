name: 2 - Deploy Web Application

on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: "web-edy6adq5gcjnq"   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.' 
  DOTNET_VERSION: '9.0.x'                 # set this to the .NET Core version to use
  BUILD_CONFIGURATION: Release

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}    

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      # Install EF tool globally
      - name: Install EF tool
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore

      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}

      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.MIGRATIONS_GITHUB_CREDENTIALS }}
          enable-AzPSSession: true

#      - name: Add IP to Firewall
#        run: az sql server firewall-rule create --resource-group ${RESOURCE_GROUP} --server ${SQL_SERVER} --name GitHubIP --start-ip-address ${IP_ADDRESS} --end-ip-address ${IP_ADDRESS}
#        env:
#          SQL_SERVER: sqlserver-edy6adq5gcjnq
#          IP_ADDRESS: ${{ steps.ip.outputs.ipv4 }}
#          RESOURCE_GROUP: rg-EurocreditConnector

      # Build migrations script
      - name: Build migrations script
        run: >-
          dotnet ef migrations script
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --idempotent
          --project River.Infrastructure
          --startup-project River.Gui
          --output ${{ github.workspace }}/river-migrations.sql

#      - name: Remove IP from Firewall
#        if: always()
#        run: az sql server firewall-rule delete --resource-group ${RESOURCE_GROUP} --server ${SQL_SERVER} --name GitHubIP
#        env:
#          SQL_SERVER: sqlserver-edy6adq5gcjnq
#          RESOURCE_GROUP: rg-EurocreditConnector

      - name: Publish
        run: dotnet publish -c Release -r linux-x64 --self-contained false -o ./publish
    
      - name: Azure logout via Azure CLI
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.MIGRATIONS_GITHUB_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Sql Action
        uses: azure/sql-action@v2.3
        with:
          connection-string: "Server=tcp:sqlserver-edy6adq5gcjnq.database.windows.net,1433;Initial Catalog=sqldb-edy6adq5gcjnq;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=Active Directory Service Principal;User ID=26d87b19-ebdb-4f64-8001-f2351de28b03; Password=${{ secrets.MIGRATIONS_GITHUB_CLIENT_SECRET }}"
          path: ${{ github.workspace }}/river-migrations.sql

      - name: Azure logout via Azure CLI
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web apps
        uses: azure/webapps-deploy@v3
        with:
          app-name: "${{ env.AZURE_WEBAPP_NAME }}"
          package: "./publish"
          startup-command: "dotnet River.Gui.dll"         

       
      - name: Azure logout via Azure CLI
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
          
